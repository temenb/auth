import {logger} from '@shared/logger';
import {PrismaClient} from "@prisma/client";
import bcrypt from "bcrypt";

const prisma = new PrismaClient();

export async function seedUsers() {
  const users = await Promise.all(
    [...Array(100)].map(async (_, i) => ({
      id: `user-${i + 1}`,
      email: `test${i + 1}@test.com`,
      password: await bcrypt.hash('123123', 10),
    }))
  );

  // –°–æ–∑–¥–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∏—Ö –µ—â—ë –Ω–µ—Ç
  for (const user of users) {
    const exists = await prisma.user.findUnique({ where: { id: user.id } });
    if (!exists) {
      await prisma.user.create({ data: user });
    }
  }

  logger.log('üë§ Users are created');
}
